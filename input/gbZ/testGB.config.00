
 
 

load("tests/testGB.m2")



randomIdealOpts = ()->
{
    opts := new OptionTable from {
     "absCoeff" => 23,
     "maxDegree"=> 3,
     --"maxTerms" => random(1,3),
     "maxTerms" => 4,  
     "maxGens"  => 2
    };
    return (opts);
}


randomRingOpts = ()->
{
    opts := new OptionTable from {
     "coeffRng" => ZZ,
     "numVars"=>random(0,2),
     "orderings" => {GRevLex,GLex,Lex },
      --orderings = {Lex, GLex,RevLex, GRevLex};
      --orderings = {Lex, GLex, GRevLex};
     "maxWeight"=>5,
     "useWeights"=>false
    };
    return (opts);
}


-- absCoeff = random(1, opts#"absCoeff");
--    numVars = random(1,15);
--    maxMonomialDegree = random(1,7);
--    maxTerms = random(1,5);
--    maxGens = random(1,5);

--    rng = ZZ[x_1..x_numVars]
--    randomCoefficient = randomCoefficientFactory(coefficientRing rng ,absCoeff);
--    randomMonomial = randomMonomialFactory(rng, maxMonomialDegree)
--    randomTerm = randomTermFactory(randomCoefficient, randomMonomial)
--    randomPoly = randomPolyFactory(randomTerm, maxTerms);
--    randomIdeal = randomIdealFactory(randomPoly, maxGens);


